name: Zip and Release Python/wol Directory

on:
  push:
    branches:
      - main
    paths:
      - 'Python/wol/**'  # Only trigger when changes are made to the files in this directory

jobs:
  zip_and_release:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Create a zip file of the 'Python/wol' directory
    - name: Zip the Python/wol directory
      run: |
        zip -r python_wol.zip Python/wol/

    # Get the latest tag or generate one if none exists
    - name: Get Version Tag
      id: get_tag
      run: |
        # Get the latest tag or default to v0.0.0
        TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
        # Extract major, minor, and patch from the tag
        IFS='.' read -r -a VERSION_PARTS <<< "${TAG/v/}"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        # Increment the patch version
        NEW_TAG="v$MAJOR.$MINOR.$((PATCH+1))"
        echo "New tag: $NEW_TAG"
        echo "::set-output name=NEW_TAG::$NEW_TAG"

    # Create a new GitHub release using the new tag
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.NEW_TAG }}
        release_name: Release ${{ steps.get_tag.outputs.NEW_TAG }}
        draft: false
        prerelease: false

    # Upload the zip file as an asset to the release
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./python_wol.zip
        asset_name: python_wol.zip
        asset_content_type: application/zip